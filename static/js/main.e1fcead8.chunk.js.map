{"version":3,"sources":["Home.js","OktaSignInWidget.js","Login.js","Protected.js","config.js","AppWithRouterAccess.js","App.js","reportWebVitals.js","index.js"],"names":["Home","history","useHistory","useOktaAuth","oktaAuth","authState","isPending","login","a","push","logout","signOut","button","isAuthenticated","onClick","to","OktaSignInWidget","config","onSuccess","onError","widgetRef","useRef","useEffect","current","widget","OktaSignIn","showSignInToGetTokens","el","then","catch","remove","ref","Login","pathname","tokens","handleLoginRedirect","err","console","log","Protected","oktaAuthConfig","issuer","clientId","redirectUri","window","location","origin","oktaSignInConfig","baseUrl","authParams","OktaAuth","AppWithRouterAccess","onAuthRequired","path","exact","component","render","LoginCallback","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"iPA2BeA,EAtBF,WACX,IAAMC,EAAUC,cADC,EAEeC,cAAxBC,EAFS,EAETA,SAAUC,EAFD,EAECA,UAElB,GAAIA,EAAUC,UAAW,OAAO,KAEhC,IAAMC,EAAK,uCAAG,sBAAAC,EAAA,+EAAYP,EAAQQ,KAAK,WAAzB,2CAAH,qDAELC,EAAM,uCAAG,sBAAAF,EAAA,+EAAYJ,EAASO,WAArB,2CAAH,qDAENC,EAASP,EAAUQ,gBACvB,wBAAQC,QAASJ,EAAjB,oBACA,wBAAQI,QAASP,EAAjB,mBAEF,OACE,gCACE,cAAC,IAAD,CAAMQ,GAAG,IAAT,kBAAwB,uBACxB,cAAC,IAAD,CAAMA,GAAG,aAAT,uBAAsC,uBACrCH,M,iBCFQI,G,MAjBU,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,OAAQC,EAAyB,EAAzBA,UAAWC,EAAc,EAAdA,QACvCC,EAAYC,mBAclB,OAbAC,qBAAU,WACR,IAAKF,EAAUG,QACb,OAAO,EAET,IAAMC,EAAS,IAAIC,IAAWR,GAM9B,OAJAO,EAAOE,sBAAsB,CAC3BC,GAAIP,EAAUG,UACbK,KAAKV,GAAWW,MAAMV,GAElB,kBAAMK,EAAOM,YACnB,IAEK,qBAAKC,IAAKX,MCMLY,EApBD,SAAC,GAAgB,IAAdf,EAAa,EAAbA,OAAa,EACId,cAAxBC,EADoB,EACpBA,SAAUC,EADU,EACVA,UAUlB,OAAIA,EAAUC,UAAkB,KAEzBD,EAAUQ,gBACf,cAAC,IAAD,CAAUE,GAAI,CAAEkB,SAAU,OAC1B,cAAC,EAAD,CACEhB,OAAQA,EACRC,UAdc,SAACgB,GACjB9B,EAAS+B,oBAAoBD,IAc3Bf,QAXY,SAACiB,GACfC,QAAQC,IAAI,mBAAoBF,OCVrBG,EADG,kBAAM,4CCFlBC,EAAiB,CAIrBC,OAAQ,+CACRC,SAAU,uBACVC,YAAaC,OAAOC,SAASC,OAAS,mBAGlCC,EAAmB,CACvBC,QAAS,gCACTN,SAAU,uBACVC,YAAaC,OAAOC,SAASC,OAAS,kBACtCG,WAAY,ICJR7C,EAAW,IAAI8C,WAASV,GAuBfW,EArBa,WAC1B,IAAMlD,EAAUC,cAMhB,OACE,cAAC,IAAD,CACEE,SAAUA,EACVgD,eAPsB,WACxBnD,EAAQQ,KAAK,WAIb,SAIE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO4C,KAAK,IAAIC,OAAO,EAAMC,UAAWvD,IACxC,cAAC,IAAD,CAAaqD,KAAK,aAAaE,UAAWhB,IAC1C,cAAC,IAAD,CAAOc,KAAK,SAASG,OAAQ,kBAAM,cAAC,EAAD,CAAOvC,OAAQ8B,OAClD,cAAC,IAAD,CAAOM,KAAK,kBAAkBE,UAAWE,YClBlCC,EALH,kBACV,cAAC,IAAD,UACE,cAAC,EAAD,OCMWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjC,MAAK,YAAkD,IAA/CkC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASX,OACP,cAAC,IAAMY,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.e1fcead8.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useOktaAuth } from '@okta/okta-react';\r\n\r\nconst Home = () => {\r\n  const history = useHistory();\r\n  const { oktaAuth, authState } = useOktaAuth();\r\n\r\n  if (authState.isPending) return null;\r\n\r\n  const login = async () => history.push('/login');\r\n  \r\n  const logout = async () => oktaAuth.signOut();\r\n\r\n  const button = authState.isAuthenticated ? \r\n    <button onClick={logout}>Logout</button> :\r\n    <button onClick={login}>Login</button>;\r\n\r\n  return (\r\n    <div>\r\n      <Link to='/'>Home</Link><br/>\r\n      <Link to='/protected'>Protected</Link><br/>\r\n      {button}\r\n    </div>\r\n  );\r\n};\r\nexport default Home;","import React, { useEffect, useRef } from 'react';\r\nimport OktaSignIn from '@okta/okta-signin-widget';\r\nimport '@okta/okta-signin-widget/dist/css/okta-sign-in.min.css';\r\n\r\nconst OktaSignInWidget = ({ config, onSuccess, onError }) => {\r\n  const widgetRef = useRef();\r\n  useEffect(() => {\r\n    if (!widgetRef.current)\r\n      return false;\r\n    \r\n    const widget = new OktaSignIn(config);\r\n\r\n    widget.showSignInToGetTokens({\r\n      el: widgetRef.current,\r\n    }).then(onSuccess).catch(onError);\r\n\r\n    return () => widget.remove();\r\n  }, []);\r\n\r\n  return (<div ref={widgetRef} />);\r\n};\r\nexport default OktaSignInWidget;","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport OktaSignInWidget from './OktaSignInWidget';\r\nimport { useOktaAuth } from '@okta/okta-react';\r\n\r\nconst Login = ({ config }) => {\r\n  const { oktaAuth, authState } = useOktaAuth();\r\n\r\n  const onSuccess = (tokens) => {\r\n    oktaAuth.handleLoginRedirect(tokens);\r\n  };\r\n\r\n  const onError = (err) => {\r\n    console.log('error logging in', err);\r\n  };\r\n\r\n  if (authState.isPending) return null;\r\n\r\n  return authState.isAuthenticated ?\r\n    <Redirect to={{ pathname: '/' }}/> :\r\n    <OktaSignInWidget\r\n      config={config}\r\n      onSuccess={onSuccess}\r\n      onError={onError}/>;\r\n};\r\nexport default Login;","import React from 'react';\r\n\r\nconst Protected = () => <h3>Protected</h3>;\r\nexport default Protected;","const oktaAuthConfig = {\r\n  // Note: If your app is configured to use the Implicit Flow\r\n  // instead of the Authorization Code with Proof of Code Key Exchange (PKCE)\r\n  // you will need to add `pkce: false`\r\n  issuer: 'https://dev-25513845.okta.com/oauth2/default',\r\n  clientId: '0oa9zadwnAtYwNl5C5d6',\r\n  redirectUri: window.location.origin + '/login/callback',\r\n};\r\n\r\nconst oktaSignInConfig = {\r\n  baseUrl: 'https://dev-25513845.okta.com',\r\n  clientId: '0oa9zadwnAtYwNl5C5d6',\r\n  redirectUri: window.location.origin + '/login/callback',\r\n  authParams: {\r\n    // If your app is configured to use the Implicit Flow\r\n    // instead of the Authorization Code with Proof of Code Key Exchange (PKCE)\r\n    // you will need to uncomment the below line\r\n    // pkce: false\r\n  }\r\n};\r\n\r\nexport { oktaAuthConfig, oktaSignInConfig };","import React from 'react';\r\nimport { Route, useHistory, Switch } from 'react-router-dom';\r\nimport { Security, SecureRoute, LoginCallback } from '@okta/okta-react';\r\nimport { OktaAuth } from '@okta/okta-auth-js';\r\nimport Home from './Home';\r\nimport Login from './Login';\r\nimport Protected from './Protected';\r\nimport { oktaAuthConfig, oktaSignInConfig } from './config';\r\n\r\nconst oktaAuth = new OktaAuth(oktaAuthConfig);\r\n\r\nconst AppWithRouterAccess = () => {\r\n  const history = useHistory();\r\n\r\n  const customAuthHandler = () => {\r\n    history.push('/login');\r\n  };\r\n\r\n  return (\r\n    <Security\r\n      oktaAuth={oktaAuth}\r\n      onAuthRequired={customAuthHandler}\r\n    >\r\n      <Switch>\r\n        <Route path='/' exact={true} component={Home} />\r\n        <SecureRoute path='/protected' component={Protected} />\r\n        <Route path='/login' render={() => <Login config={oktaSignInConfig} />} />\r\n        <Route path='/login/callback' component={LoginCallback} />\r\n      </Switch>\r\n    </Security>\r\n  );\r\n};\r\nexport default AppWithRouterAccess;","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport AppWithRouterAccess from './AppWithRouterAccess';\n\nconst App = () => (\n  <Router>\n    <AppWithRouterAccess/>\n  </Router>\n);\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}